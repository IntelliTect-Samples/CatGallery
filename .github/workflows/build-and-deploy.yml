name: Build, Test, and Deploy CatGallery

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
          dotnet-quality: 'ga'
          
      - name: Get Build Information
        run: |
          pwd
          dotnet --info
          dotnet --version
          
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: ./CatGallery.Web/package-lock.json

      - name: Restore and Install npm Packages
        run: |
          cd ./CatGallery.Web
          npm ci
          npm run build
        shell: pwsh
          
      - name: Build and Restore with dotnet
        run: dotnet build --configuration Release
        
      - name: Run .NET Tests
        run: dotnet test --no-build --configuration Release

      - name: Run TS Vite Tests
        working-directory: ./CatGallery.Web
        run: npm run test

      - name: dotnet publish
        if: github.event_name != 'pull_request'
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/CatGallery

      - name: Upload artifact for deployment job
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/CatGallery
          
  deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: 'Demo'
      url: ${{ steps.deploy-to-dev-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-dev-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'CatGallery'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: .
